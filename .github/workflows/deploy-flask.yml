name: Deploy to EC2

on:
  push:
    branches: [ main ]

env:
    AWS_REGION: eu-west-1
    CONTAINER_NAME: coffee-wifi

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    #Step 1: Checkout the code
    - name: Check out code
      uses: actions/checkout@v2
    
    #Step 2: Log in to AWS CLI
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.USER }}
        aws-secret-access-key: ${{ secrets.SSH_KEY }}
        aws-region: eu-west-1

    #Step 3: Login to Amazon ECR
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: coffee-wifi
        IMAGE_TAG: latest
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Debug secrets and environment
      run: |
        echo "ECR_REGISTRY: ${ECR_REGISTRY:+'[set]'}"
        echo "ECR_REPOSITORY: ${ECR_REPOSITORY:+'[set]'}"
        echo "IMAGE_TAG: ${IMAGE_TAG:+'[set]'}"
        echo "EC2_HOST: ${EC2_HOST:+'[set]'}"


    #Step 4: Deploy to EC2 instance
    - name: Deploy to EC2 via SSH
      uses: appleboy/ssh-action@v1.1.0
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          aws ecr get-login-password --region eu-west-1 | sudo docker login --username AWS --password-stdin aws ecr get-login-password --region eu-west-1 | sudo docker login --username AWS --password-stdin 430118857028.dkr.ecr.eu-west-1.amazonaws.com
          sudo docker pull $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          if sudo docker ps -a --format '{{.Names}}' | grep -w "$CONTAINER_NAME" > /dev/null; then
              echo "Container '$CONTAINER_NAME' exists. Stopping..."
              sudo docker stop "$CONTAINER_NAME"
              sudo docker rm "$CONTAINER_NAME"
          else
              echo "Container does not exist. No action taken."
          fi
          sudo docker run -d --name $CONTAINER_NAME -p 80:80 $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
